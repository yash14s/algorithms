#include <iostream>
#include <vector>
#include <cstdlib>

using std::vector;
using std::swap;
using namespace std;


int* partition3(vector<int> &a, int l, int r)
{
	int x=a[l];
	int m1=l,m2;
	for(int i=l+1;i<=r;i++)
	{
		if(a[i]<x)
		{
			m1++;
			swap(a[i],a[m1]);
		}
	}
	swap(a[l],a[m1]);
	m2=m1;
	x=a[m1];
	for(int i=m1+1;i<=r;i++)
	{
		if(a[i]==x)
		{
			m2++;
			swap(a[i],a[m2]);
		}
	}
	
	int* m = new int[2];
	m[0] = m1;
	m[1] = m2;
	return m;
}

void randomized_quick_sort(vector<int> &a, int l, int r) {
  if (l >= r) {
    return;
  }

  int k = l + rand() % (r - l + 1);
  swap(a[l], a[k]);

  int* m = partition3(a,l,r);
  int m1 = m[0]; 
  int m2 = m[1];
  randomized_quick_sort(a, l, m1 - 1);
  randomized_quick_sort(a, m2 + 1, r);

}

int main() {
  int n;
  std::cin >> n;
  vector<int> a(n);
  for (size_t i = 0; i < a.size(); ++i) {
    std::cin >> a[i];
  }
  randomized_quick_sort(a, 0, a.size() - 1);
  for (size_t i = 0; i < a.size(); ++i) {
    std::cout << a[i] << ' ';
  }
}
