#include <iostream>
#include <vector>
#include <algorithm>

long long MaxPairwiseProduct(const std::vector<long long>& numbers) {
    long long max_product = 0;
    long long maxiv=0;
    long long maxjv=0;
    long long maxi, maxj;
    long long n = numbers.size();

    
    
    for(long long i=0;i<n;i++)
    {
    	if(numbers[i]>maxiv)
    	{
    		maxi=i;
    		maxiv=numbers[i];
		}
    }
    for(long long j=0;j<n;j++)
    {
    	if((numbers[j]>maxjv)&&(j!=maxi))
    	{
    		maxj=j;
    		maxjv=numbers[j];
		}
    }
    
    max_product=maxiv*maxjv;

    return max_product;
}

int main() {
    long long n;
    std::cin >> n;
    std::vector<long long> numbers(n);
    for (long long i = 0; i < n; ++i) {
        std::cin >> numbers[i];
    }

    std::cout << MaxPairwiseProduct(numbers)<< "\n";
    return 0;
}
